# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
#
# This file is the result of a code generation process; any changes made
# to this file will be overwritten during the next code generation
# invocation. Any changes MUST be made in the source file rather than in
# this one.
#
#     Code Generator:         Jinja2
#     Input Filename:         actions/initialize/action.jinja2.yml
#     Generated Date:         2022-11-08 12:22:28.059939
#
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# |
# |  action.yml
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2022-10-31 11:22:35
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2022
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------
name: Initialize
description: Initializes OS-Specific Variables used by other composable actions.

inputs:
  os:                                       {type: string, required: true}

outputs:
  local_script_prefix:
    description: "Prefix used when invoking a script in the current directory."
    value: ${{ steps.local_script_prefix.outputs.result }}

  script_extension:
    description: "File extension used for scripts."
    value: ${{ steps.script_extension.outputs.result }}

  shell_name:
    description: "Name of shell used to invoke GitHub actions."
    value: ${{ steps.shell_name.outputs.result }}

  source_command:
    description: "Command used when invoking a script that changes the state of the current environment."
    value: ${{ steps.source_command.outputs.result }}

  sudo_command:
    description: "Common used to invoke privileged operations."
    value: ${{ steps.sudo_command.outputs.result }}

  working_dir:
    description: "Working directory."
    value: ${{ steps.working_directory.outputs.result }}

runs:
  using: composite
  steps:

    - name: Local Script Prefix
      id: local_script_prefix
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return "${{ inputs.os }}".startsWith("windows") ? "" : "./";

    - name: Script Extension
      id: script_extension
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return "${{ inputs.os }}".startsWith("windows") ? ".cmd" : ".sh";

    - name: Shell Name
      id: shell_name
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return "${{ inputs.os }}".startsWith("windows") ? "cmd" : "bash";

    - name: Source Command
      id: source_command
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return "${{ inputs.os }}".startsWith("windows") ? "" : ". ";

    - name: Sudo Command
      id: sudo_command
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return "${{ inputs.os }}".startsWith("windows") ? "" : "sudo ";

    - name: Working Directory
      id: working_directory
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return "${{ inputs.os }}".startsWith("windows") ? process.env.RUNNER_TEMP : process.env.RUNNER_TEMP;

    - name: Results
      shell: ${{ steps.shell_name.outputs.result }}
      run: |
        echo "Local Script Prefix: '${{ steps.local_script_prefix.outputs.result }}'"
        echo "Script Extension: '${{ steps.script_extension.outputs.result }}'"
        echo "Shell Name: '${{ steps.shell_name.outputs.result }}'"
        echo "Source Command: '${{ steps.source_command.outputs.result }}'"
        echo "Sudo Command: '${{ steps.sudo_command.outputs.result }}'"
        echo "Working Directory: '${{ steps.working_directory.outputs.result }}'"
