<<#
# ----------------------------------------------------------------------
# |
# |  _BuildAndTest.template.yaml
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2022-11-07 10:12:47
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2022
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------

The following values may be customized by child templates:

  - inputs: Additional inputs required by the child template.
  - prologue_steps: Steps invoked after setup and activation but before build and tests.
  - epilogue_steps: Steps invoked after build and tests.

#>>

# Sample implementation in the calling workflow:
#
# name: SampleWorkflow
# run-name: ${{ github.run_number }} [${{ github.actor }}] on ${{ github.ref_name }}
#
# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - main
#   workflow_dispatch:
#
# jobs:
#   <repo_name_here>:
#     strategy:
#       matrix:
#         os:
#           - ubuntu-latest
#           - windows-latest
#
#         configuration:
#           # Enter repository configurations here, or "None" (without quotes) for repositories that aren't configurable
#           - Enter_a_valid_configuration_name_here
#
#     uses: /davidbrownell/v4-Common_Foundation/.github/workflows/callable_BuildAndTest.yaml@CI-v1.0.0
#     with:
#       os:                                   ${{ matrix.os }}
#       configuration:                        ${{ matrix.configuration }}
#
#       checkout_source:                      true
#
#       run_Builder:                          true
#
#       # Use the following values to control how different test types are run:
#       #
#       #   0: Do not run these test types
#       #   1: Run these test types without code coverage
#       #   2: Run these test types with code coverage
#       #   3: Run these test types with and without code coverage
#
#       execute_UnitTests:                    3
#       execute_FunctionalTests:              1
#       execute_IntegrationTests:             1
#       execute_SystemTests:                  1
#       execute_LocalEndToEndTests:           1
#       execute_EndToEndTests:                0
#       execute_BuildVerificationTests:       0
#       execute_PerformanceTests:             0

on:
  workflow_call:
    inputs:
      # ----------------------------------------------------------------------
      # |  Misc
      setup_branch_overrides:
        type: string
        required: false
        description: BugBug

      subject_repo_name:
        type: string
        required: false
        description: BugBug

      subject_repo_branch:
        type: string
        required: false
        description: BugBug
        default: release

      os:
        type: string
        required: true
        description: Operating system.

      configuration:
        type: string
        required: true
        description: "Name of the configuration to use when setting up and activating the environment (specify the 'None' string value for repositories that aren't configurable)."

      # ----------------------------------------------------------------------
      #  Builder
      run_Builder:                          {type: boolean, required: true, default: true}

      # ----------------------------------------------------------------------
      #  Test Types

      # These tests will run by default
      execute_UnitTests:                    {type: number, required: true, default: 3} # Run with code coverage
      execute_FunctionalTests:              {type: number, required: true, default: 1}
      execute_IntegrationTests:             {type: number, required: true, default: 1}
      execute_SystemTests:                  {type: number, required: true, default: 1}
      execute_LocalEndToEndTests:           {type: number, required: true, default: 1}

      # These tests will not run by default
      execute_EndToEndTests:                {type: number, required: true, default: 0}
      execute_BuildVerificationTests:       {type: number, required: true, default: 0}
      execute_PerformanceTests:             {type: number, required: true, default: 0}

      # ----------------------------------------------------------------------
      # |  Child Inputs
<<% block inputs %>><<% endblock %>>

jobs:
  Steps:
    name: "[${{ inputs.os }}, ${{ inputs.configuration }}]"
    runs-on: ${{ inputs.os }}

    env:
      COLUMNS:                                          "200"
      SIMULATE_TERMINAL_CAPABILITIES_SUPPORTS_COLORS:   "1"
      PYTHONIOENCODING:                                 "UTF-8"

    steps:
      - name: "[Impl] Dump Contexts"
        if: ${{ startsWith(inputs.os, 'ubuntu') }}
        uses: davidbrownell/v4-Common_Foundation/.github/actions/dump_contexts@CI-vBugBug

      # outputs:
      #   - local_script_prefix
      #   - script_extension
      #   - shell_name
      #   - source_command
      #   - sudo_command
      #   - working_dir
      #
      - name: "[Impl] Initialize OS-Specific Variables"
        id: initialize
        uses: davidbrownell/v4-Common_Foundation/.github/actions/initialize@CI-vBugBug
        with:
          os:                               ${{ inputs.os }}

      # outputs:
      #   - archive_prefix
      #   - repo_name
      #   - repo_dir
      #
      - name: Checkout Source
        id: checkout_source
        uses: davidbrownell/v4-Common_Foundation/.github/actions/checkout_source@CI-vBugBug
        with:
          bugbug_test:                      ${{ steps.initialize.outputs.bugbug_test }}

          subject_repo_name:                ${{ inputs.subject_repo_name }}
          subject_repo_branch:              ${{ inputs.subject_repo_branch }}

          os:                               ${{ inputs.os }}
          configuration:                    ${{ inputs.configuration }}

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Setup
        uses: davidbrownell/v4-Common_Foundation/.github/actions/setup@CI-vBugBug
        with:
          repo_name:                        ${{ steps.checkout_source.outputs.repo_name }}
          repo_dir:                         ${{ steps.checkout_source.outputs.repo_dir }}
          branch_overrides:                 ${{ inputs.setup_branch_overrides }}

          os:                               ${{ inputs.os }}
          configuration:                    ${{ inputs.configuration }}

          local_script_prefix:              ${{ steps.initialize.outputs.local_script_prefix }}
          script_extension:                 ${{ steps.initialize.outputs.script_extension }}
          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          sudo_command:                     ${{ steps.initialize.outputs.sudo_command }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      # outputs:
      #   - activate_statement
      #
      - name: Activate
        id: activate
        uses: davidbrownell/v4-Common_Foundation/.github/actions/activate@CI-vBugBug
        with:
          repo_dir:                         ${{ steps.checkout_source.outputs.repo_dir }}
          os:                               ${{ inputs.os }}
          configuration:                    ${{ inputs.configuration }}
          shell_name:                       ${{ steps.initialize.outputs.shell_name }}

<<% block prologue_steps %>><<% endblock %>>

      - name: Builder
        uses: davidbrownell/v4-Common_Foundation/.github/actions/builder@CI-vBugBug
        if: ${{ inputs.run_Builder == true || inputs.run_Builder == 'true' }}
        with:
          archive_prefix:                   ${{ steps.checkout_source.outputs.archive_prefix }}

          os:                               ${{ inputs.os }}
          configuration:                    ${{ inputs.configuration }}

          script_extension:                 ${{ steps.initialize.outputs.script_extension }}
          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

          activate_statement:               ${{ steps.activate.outputs.activate_statement }}

<<%
  set test_types = [
    "UnitTests",
    "FunctionalTests",
    "IntegrationTests",
    "SystemTests",
    "LocalEndToEndTests",
    "EndToEndTests",
    "BuildVerificationTests",
    "PerformanceTests"
  ]
%>>
<<%
  for use_code_coverage, name_suffix, conditional_template in [
    (
      False,
      "",
      "${{{{ inputs.execute_{test_type} == 1 || inputs.execute_{test_type} == 3 }}}}",
    ),
    (
      True,
      ", Code Coverage",
      "${{{{ inputs.execute_{test_type} == 2 || inputs.execute_{test_type} == 3 }}}}",
    ),
  ]
%>>
  <<% for test_type in test_types %>>
      - name: Tester (<<< test_type >>><<< name_suffix >>>)
        uses: davidbrownell/v4-Common_Foundation/.github/actions/tester@CI-vBugBug
        if: <<< conditional_template.format(test_type=test_type) >>>
        with:
          archive_prefix:                   ${{ steps.checkout_source.outputs.archive_prefix }}

          os:                               ${{ inputs.os }}
          configuration:                    ${{ inputs.configuration }}

          script_extension:                 ${{ steps.initialize.outputs.script_extension }}
          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

          activate_statement:               ${{ steps.activate.outputs.activate_statement }}

          test_type:                        <<< test_type >>>
          code_coverage:                    <<< use_code_coverage | string | lower >>>

  <<% endfor %>>
<<% endfor %>>

<<% block epilogue_steps %>><<% endblock %>>
