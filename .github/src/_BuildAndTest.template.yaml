<<#
# ----------------------------------------------------------------------
# |
# |  _BuildAndTest.template.yaml
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2022-11-07 10:12:47
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2022-23
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------

The following values may be customized by child templates:

  - bat_name [required]:            Name of this workflow
  - bat_inputs [optional]:          Additional inputs required by the child template.
  - bat_cache_steps [optional]:     Steps invoked after source is checked out and standard cache content has been restored.
  - bat_prologue_steps [optional]:  Steps invoked after setup and activation but before build and tests.
  - bat_epilogue_steps [optional]:  Steps invoked after build and tests.

#>>

<<% extends "_SetupAndActivate.template.yaml" %>>

<<% block saa_name %>><<% block bat_name %>><<% endblock %>><<% endblock %>>

<<% block saa_inputs %>>

      # ----------------------------------------------------------------------
      #  Builder
      run_Builder:                          {type: boolean, required: false, default: false}

      # ----------------------------------------------------------------------
      #  Test Types
      run_MatchTests:                       {type: boolean, required: false, default: false }

      # These tests will run by default
      execute_UnitTests:                    {type: number, required: true, default: 3} # Run with code coverage
      execute_FunctionalTests:              {type: number, required: true, default: 1}
      execute_IntegrationTests:             {type: number, required: true, default: 1}
      execute_SystemTests:                  {type: number, required: true, default: 1}
      execute_LocalEndToEndTests:           {type: number, required: true, default: 1}

      # These tests will not run by default
      execute_EndToEndTests:                {type: number, required: true, default: 0}
      execute_BuildVerificationTests:       {type: number, required: true, default: 0}
      execute_PerformanceTests:             {type: number, required: true, default: 0}

<<% block bat_inputs %>><<% endblock %>>
<<% endblock %>>

<<% block saa_cache_steps %>><<% block bat_cache_steps %>><<% endblock %>><<% endblock %>>

<<% block saa_steps %>>
<<% block bat_prologue_steps %>><<% endblock %>>

      - name: Builder
        if: ${{ inputs.run_Builder == true || inputs.run_Builder == 'true' }}
        uses: davidbrownell/v4-Common_Foundation/.github/actions/builder@CI-v1
        with:
          archive_prefix: ${{ steps.checkout_source.outputs.archive_prefix }}

          os: ${{ inputs.os }}
          configuration: ${{ inputs.configuration }}

          script_extension: ${{ steps.initialize.outputs.script_extension }}
          shell_name: ${{ steps.initialize.outputs.shell_name }}
          working_dir: ${{ steps.initialize.outputs.github_workspace }}

          activate_statement: ${{ steps.activate.outputs.activate_statement }}

<<%
  set match_test_types = [
    "UnitTests",
  ]
%>>
<<% for test_type in match_test_types %>>
      - name: Tester (Match Tests, <<< test_type >>>)
        if: ${{ inputs.run_MatchTests == true || inputs.run_MatchTests == 'true' }}
        uses: davidbrownell/v4-Common_Foundation/.github/actions/tester_match_tests@CI-v1
        with:
          script_extension: ${{ steps.initialize.outputs.script_extension }}
          shell_name: ${{ steps.initialize.outputs.shell_name }}

          activate_statement: ${{ steps.activate.outputs.activate_statement }}

          test_type: <<< test_type >>>
<<% endfor %>>

<<%
  set test_types = [
    "UnitTests",
    "FunctionalTests",
    "IntegrationTests",
    "SystemTests",
    "LocalEndToEndTests",
    "EndToEndTests",
    "BuildVerificationTests",
    "PerformanceTests",
  ]
%>>
<<%
  for use_code_coverage, name_suffix, conditional_template in [
    (
      False,
      "",
      "${{{{ inputs.execute_{test_type} == 1 || inputs.execute_{test_type} == 3 }}}}",
    ),
    (
      True,
      ", Code Coverage",
      "${{{{ inputs.execute_{test_type} == 2 || inputs.execute_{test_type} == 3 }}}}",
    ),
  ]
%>>
  <<% for test_type in test_types %>>
      - name: Tester (<<< test_type >>><<< name_suffix >>>)
        if: <<< conditional_template.format(test_type=test_type) >>>
        uses: davidbrownell/v4-Common_Foundation/.github/actions/tester@CI-v1
        with:
          archive_prefix: ${{ steps.checkout_source.outputs.archive_prefix }}

          os: ${{ inputs.os }}
          configuration: ${{ inputs.configuration }}

          script_extension: ${{ steps.initialize.outputs.script_extension }}
          shell_name: ${{ steps.initialize.outputs.shell_name }}
          working_dir: ${{ steps.initialize.outputs.github_workspace }}

          activate_statement: ${{ steps.activate.outputs.activate_statement }}

          test_type: <<< test_type >>>
          code_coverage: <<< use_code_coverage | string | lower >>>

  <<% endfor %>>
<<% endfor %>>

<<% block bat_epilogue_steps %>><<% endblock %>>
<<% endblock %>>
