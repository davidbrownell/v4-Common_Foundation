# ----------------------------------------------------------------------
# This GitHub workflow was generated in support of common scenarios, but can be customized to meet
# the needs of your repository if necessary.
#
# If your repository matches the following criteria, there is no need for customization:
#
#   1) This repository supports MacOS, Linux (ubuntu), and Windows
#   2) This repository is activated without configurations
#   3) This repository uses a standard build and test workflow (no language-specific functionality
#        is invoked outside of Builder and Tester)
#   4) This repository does not invoke any custom test types
#
# It is safe to continue without modifying this file if all of the above conditions are true.
# If not...
#
#   1) If you need to add/remove operating systems, see the notes in this file under "#operating-systems"
#   2) If you need to add configurations, see the notes in this file under "#configurations"
#   3) If you need to customize the workflow, see the notes in this file under "#customized-workflow"
#   4) If you need to customize the test types, see the notes in this file under "#test-types"
#
# ----------------------------------------------------------------------
name: "[callable] Validates <<< friendly_repo_name >>>"

on:
  workflow_call:
    inputs:
      repo_branch:                          {type: string, required: true}
      force_setup:                          {type: boolean, required: false, default: false}
      force_activate:                       {type: boolean, required: false, default: false}
      no_cache:                             {type: boolean, required: false, default: false}

      bootstrap_branch_overrides:           {type: string, required: false}

jobs:
  _<<< guid() >>>:
    name: "Build and Test"

    strategy:
      matrix:
        os:
          # ----------------------------------------------------------------------
          #operating-systems

          # This yaml list represents the operating systems used when validating this repository;
          # this concept is referred to as "runners" within GitHub terminology.
          #
          # Visit https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
          # for more information about GitHub "runners", including a list of all available "runners".
          #
          # ----------------------------------------------------------------------
          - macos-latest
          - ubuntu-latest
          - windows-latest

        configuration:
          # ----------------------------------------------------------------------
          #configurations

          # This yaml list represents the repository configurations that should be exercised during
          # the validation of this repository.
          #
          # Visit https://github.com/davidbrownell/v4-Common_Foundation#configuration for more information
          # about configurations.
          #
          # Examples of workflows with one or more configurations:
          #   - https://github.com/davidbrownell/v4-Common_Foundation/blob/8d1ece829a868e769c0ba20788ea78bdc2dfa4fa/.github/workflows/validate.yaml#L53
          #   - https://github.com/davidbrownell/v4-Common_PythonDevelopment/blob/d13db74fa9d5420973af12853821d9dae07dc4a7/.github/workflows/validate.yaml#L53
          #
          # ----------------------------------------------------------------------
          - None

    # ----------------------------------------------------------------------
    #customized-workflow

    # This workflow is based on the generic workflow definition at
    # https://github.com/davidbrownell/v4-Common_Foundation/blob/main/.github/workflows/callable_validate.yaml.
    # This workflow...
    #
    #   1) Enlists and Initializes the repository and its dependencies using:
    #       * [Bootstrap.sh](../../Bootstrap.sh) / [Bootstrap.cmd](../../Bootstrap.cmd)
    #       * [Setup.sh](../../Setup.sh) / [Setup.cmd](../../Setup.cmd)
    #   2) Activates the environment
    #   3) Builds code in the repository using [Builder](https://github.com/davidbrownell/v4-Common_Foundation/tree/main/Scripts/Builder)
    #   4) Tests code in the repository using [Tester](https://github.com/davidbrownell/v4-Common_Foundation/tree/main/Scripts/Tester)
    #
    # These steps are sufficient for many scenarios and do not require further customization. However, you
    # may want rely on a different default workflow, support configuration-specific steps, or
    # introduce new steps.
    #
    # Different default workflows
    # ---------------------------
    # An example of a different default workflow that you can leverage in this repository can be found in the
    # [Common_PythonDevelopment](https://github.com/davidbrownell/v4-Common_PythonDevelopment) repository;
    # it defines a custom workflow that includes everything in this workflow while also including Pylint validation.
    # To use that workflow, replace the yaml statement in with file...
    #
    #   uses: davidbrownell/v4-Common_Foundation/.github/workflows/callable_validate.yaml@CI-v1
    #
    # with...
    #
    #   uses: davidbrownell/v4-Common_PythonDevelopment/.github/workflows/callable_validate.yaml@CI-v1
    #
    # An example of this type of customization can be found at https://github.com/davidbrownell/v4-DavidBrownell_Backup/blob/e0ba6d49133915243f910f28e2a6cf8f905354ec/.github/workflows/validate.yaml#L35
    #
    # Support configuration-specific steps
    # ------------------------------------
    # It is possible to invoke different workflows for different configurations. For an example, visit
    # https://github.com/davidbrownell/v4-DavidBrownell_Backup/blob/main/.github/workflows/validate.yaml
    # and note the different workflows for the configurations...
    #
    #   - [dev](https://github.com/davidbrownell/v4-DavidBrownell_Backup/blob/e0ba6d49133915243f910f28e2a6cf8f905354ec/.github/workflows/validate.yaml#L25)
    #   - [standard](https://github.com/davidbrownell/v4-DavidBrownell_Backup/blob/e0ba6d49133915243f910f28e2a6cf8f905354ec/.github/workflows/validate.yaml#L64)
    #
    # Introduce new steps
    # -------------------
    # Introducing new steps within a workflow may require the definition of an entirely new workflow
    # (rather than invoking a "callable workflow" as we are doing here). Please consult the
    # [GitHub Action Documentation](https://docs.github.com/en/actions) for more information.
    #
    # ----------------------------------------------------------------------
    uses: davidbrownell/v4-Common_Foundation/.github/workflows/callable_validate.yaml@CI-v1
    with:
      job_name_prefix: "<<< friendly_repo_name >>>"
      is_mixin_repository: <<< is_mixin_repository >>>
      repo_name: <<< git_username >>>/<<< git_repo >>>
      repo_branch: ${{ inputs.repo_branch }}
      bootstrap_branch_overrides: ${{ inputs.bootstrap_branch_overrides }}

      os: ${{ matrix.os }}
      configuration: ${{ matrix.configuration }}

      run_Builder: true
      run_MatchTests: true

      force_setup: ${{ inputs.force_setup }}
      force_activate: ${{ inputs.force_activate }}
      no_cache: ${{ inputs.no_cache }}

      # ----------------------------------------------------------------------
      #test-types

      # The values below control the tests invoked and if code-coverage information should be
      # extracted for the test type. Modify the integer value for each test type to control
      # how [Tester](https://github.com/davidbrownell/v4-Common_Foundation/tree/main/Scripts/Tester)
      # is invoked on each.
      #
      # ----------------------------------------------------------------------

      # Use the following values to control how different test types are run:
      #
      #   0: Do not run these test types
      #   1: Run these test types without code coverage
      #   2: Run these test types with code coverage
      #   3: Run these test types with and without code coverage

      execute_UnitTests: 3
      execute_FunctionalTests: 1
      execute_IntegrationTests: 1
      execute_SystemTests: 1
      execute_LocalEndToEndTests: 1
      execute_EndToEndTests: 0
      execute_BuildVerificationTests: 0
      execute_PerformanceTests: 0
